// <auto-generated />
using System;
using Demo03.Dbcontexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Demo03.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250304234109_ManegeRelationShip")]
    partial class ManegeRelationShip
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Demo03.Models.Department", b =>
                {
                    b.Property<int>("DeptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeptId"));

                    b.Property<DateOnly>("DateOfCreation")
                        .HasColumnType("date");

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ManegerId")
                        .HasColumnType("int");

                    b.Property<int>("Serial")
                        .HasColumnType("int");

                    b.HasKey("DeptId");

                    b.HasIndex("ManegerId")
                        .IsUnique()
                        .HasFilter("[ManegerId] IS NOT NULL");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Demo03.Models.Employee", b =>
                {
                    b.Property<int>("ÈmpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ÈmpId"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Test")
                        .HasColumnType("int");

                    b.HasKey("ÈmpId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Demo03.Models.Department", b =>
                {
                    b.HasOne("Demo03.Models.Employee", "Manager")
                        .WithOne("ManegedDepartment")
                        .HasForeignKey("Demo03.Models.Department", "ManegerId");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("Demo03.Models.Employee", b =>
                {
                    b.OwnsOne("Demo03.Models.Address", "EmpAddress", b1 =>
                        {
                            b1.Property<int>("EmployeeÈmpId")
                                .HasColumnType("int");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("EmployeeÈmpId");

                            b1.ToTable("Employees");

                            b1.WithOwner()
                                .HasForeignKey("EmployeeÈmpId");
                        });

                    b.Navigation("EmpAddress")
                        .IsRequired();
                });

            modelBuilder.Entity("Demo03.Models.Employee", b =>
                {
                    b.Navigation("ManegedDepartment");
                });
#pragma warning restore 612, 618
        }
    }
}
